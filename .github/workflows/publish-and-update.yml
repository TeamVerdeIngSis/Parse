name: Publish Docker Image and Update VM

on:
  workflow_call:
    inputs:
      registry:
        description: 'Container registry where to publish the image'
        required: true
        type: string
      image_name:
        description: 'Image name for the Docker Image'
        required: true
        type: string
      actor:
        description: 'GitHub Actor'
        required: true
        type: string
      host:
        description: 'Virtual Machine Host IP'
        required: true
        type: string
      user:
        description: 'Virtual Machine User'
        required: true
        type: string
      container_name:
        description: 'Docker Container Name'
        required: true
        type: string
    secrets:
      PAT_TOKEN:
        description: 'Personal Access Token with sufficient rights to publish Docker image'
        required: true
      key:
        description: 'SSH Private Key to access the virtual machine'
        required: true

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ inputs.registry }}/${{ inputs.image_name }}
          push: true
          secrets: |
            PAT_TOKEN=${{ secrets.PAT_TOKEN }}

  update-vm:
    name: Update Virtual Machine
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Execute Remote SSH Commands
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ inputs.host }}
          username: ${{ inputs.user }}
          key: ${{ secrets.key }}
          script: |
            cd infra
            sudo docker stop ${{ inputs.container_name }}
            sudo docker rm ${{ inputs.container_name }}
            sudo docker rmi ${{ inputs.registry }}/${{ inputs.image_name }}
            sudo docker compose pull
            sudo docker compose up -d
