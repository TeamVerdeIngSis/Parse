plugins {
 id 'org.jetbrains.kotlin.jvm' version '1.9.25'
 id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
 id 'org.springframework.boot' version '3.3.4'
 id 'io.spring.dependency-management' version '1.1.6'
 id 'maven-publish'
 id 'jacoco'
 id 'com.diffplug.spotless' version '6.22.0'

}

group = 'teamVerde'
version = '0.0.1-SNAPSHOT'

java {
 toolchain {
  languageVersion = JavaLanguageVersion.of(21)
 }
}

configurations {
 compileOnly {
  extendsFrom annotationProcessor
 }
}

repositories {
 mavenLocal()
 mavenCentral()
 gradlePluginPortal()

 maven {
  name = "PrintScriptPackages"
  url = uri("https://maven.pkg.github.com/FedeKraft/printScript2")
  credentials {
   username = project.findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
   password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
  }
 }

 maven {
  name = "GitHubPackagesAustral"
  url = uri("https://maven.pkg.github.com/austral-ingsis/class-redis-streams")
  credentials {
   username = project.findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
   password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
  }
 }
}

dependencies {
 // Dependencias de JUnit 5
 testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
 testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

 // Spring Boot Starter Test (que incluye soporte para JUnit 5)
 testImplementation 'org.springframework.boot:spring-boot-starter-test'

 // Kotlin Test support para JUnit 5
 testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

 // Mockito para pruebas con mocks
 testImplementation 'org.mockito.kotlin:mockito-kotlin:4.1.0'

 // JUnit Platform Launcher (para ejecutar las pruebas)
 testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

 // Dependencias del proyecto
 implementation 'org.springframework.boot:spring-boot-starter-web'
 implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
 implementation 'org.jetbrains.kotlin:kotlin-reflect'
 implementation 'com.nimbusds:nimbus-jose-jwt:9.37.2'
 implementation 'printScript:lexer:1.1.27'
 implementation 'printScript:parser:1.1.27'
 implementation 'printScript:interpreter:1.1.27'
 implementation 'printScript:linter:1.1.27'
 implementation 'printScript:formatter:1.1.27'
 implementation 'printScript:ast:1.1.27'
 implementation 'printScript:cli:1.1.27'

 // Redis Streams y otras
 implementation 'org.austral.ingsis:redis-streams-flux:0.1.13'
 implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
 implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
 implementation 'com.newrelic.agent.java:newrelic-api:7.6.0'

 // Devtools para desarrollo
 developmentOnly 'org.springframework.boot:spring-boot-devtools'

 // Procesador de anotaciones
 annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

kotlin {
 compilerOptions {
  freeCompilerArgs.addAll '-Xjsr305=strict'
 }
}

tasks.named('test') {
 useJUnitPlatform()
 finalizedBy jacocoTestReport
}

jacocoTestReport {
 dependsOn test

 reports {
  xml {
   destination file("$buildDir/reports/jacoco/test-coverage.xml")
  }
  html {
   destination file("$buildDir/reports/jacoco/html")
  }
 }

 classDirectories.setFrom(
         fileTree(dir: 'build/classes/kotlin/main', includes: [
                 'com/github/teamverdeingsis/parse/services/**/*.class'
         ])
 )
}



jacocoTestCoverageVerification {
 violationRules {
  rule {
   limit {
    counter = 'INSTRUCTION'
    value = 'COVEREDRATIO'
    minimum = 0.80
   }
  }
 }
}


jacoco {
 toolVersion = '0.8.9'
}

tasks.check {
 dependsOn jacocoTestCoverageVerification
}

tasks.test {
 useJUnitPlatform()
 include '**/*Test.class'
 finalizedBy jacocoTestReport
}

spotless {
 kotlin {
  // Usa ktlint para linteo y formateo
  ktlint('0.50.0') // Versi√≥n de ktlint
  target 'src/**/*.kt'
 }
 kotlinGradle {
  // Aplica linteo y formateo a scripts de Gradle en Kotlin (*.kts)
  ktlint()
  target '*.gradle.kts'
 }
}